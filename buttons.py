from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardButton, \
    InlineKeyboardMarkup
import database


def get_username_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    btn = KeyboardButton('–í–∑—è—Ç—å –∏–∑ –¢–ì –∞–∫–∫–∞—É–Ω—Ç–∞')
    kb.add(btn)

    return kb


def admin_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn_add = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    btn_client = KeyboardButton('–ú–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞')
    btn_client1 = KeyboardButton('/show_users')
    kb.add(btn_add, btn_client, btn_client1)

    return kb


def phone_number_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
    kb.add(button)

    return kb


def location_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', request_location=True)
    kb.add(button)

    return kb


def gender_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('üë®–ú—É–∂—á–∏–Ω–∞')
    button1 = KeyboardButton('üë©‚Äçü¶∞–ñ–µ–Ω—â–∏–Ω–∞')
    kb.add(button, button1)

    return kb


def product_count():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    buttons = [KeyboardButton(i) for i in range(1, 5)]
    back = KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(*buttons)
    kb.add(back)

    return kb


def main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('SKODA')
    keyboard.add('VOLKSWAGEN')
    keyboard.add('üìÑ–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤', 'üë§–ü—Ä–æ—Ñ–∏–ª—å')
    keyboard.add('üîç–ü–æ–∏—Å–∫', 'üõí–ö–æ—Ä–∑–∏–Ω–∞')
    keyboard.add('‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã', '–û –Ω–∞—Å')

    return keyboard

def change_data_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    ch_name = KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è')
    ch_number = KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä')
    back = KeyboardButton('–ù–ê–ó–ê–î')
    kb.add(ch_name, ch_number, back)

    return kb

def accessories_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.accessories_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def electrics_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.electrics_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def auto_skoda_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.auto_skoda_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def motor_skoda_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.motor_skoda_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def chemical_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.chemical_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def filter_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.filter_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def other_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–ù–∞–∑–∞–¥')

    all_products = database.other_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def catalog_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–ù–∞–∑–∞–¥')

    all_products = database.get_product_id_from_db()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def cart_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    button = KeyboardButton('üÜë–û—á–∏—Å—Ç–∏—Ç—å')
    button1 = KeyboardButton('‚úÖ–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
    back = KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(button1, button, back)

    return kb


def order_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
    back = KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(button1, back)

    return kb


def confirmation_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
    button1 = KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å')
    button2 = KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(button, button1, button2)

    return kb


def product_name_kb(category_id):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.get_name_product(category_id)

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)


def skoda_catalog():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('–ê–ö–°–ï–°–°–£–ê–†–´', '–ê–í–¢–û–•–ò–ú–ò–Ø')
    keyboard.add('–≠–õ–ï–ö–¢–†–ò–ö–ê')
    keyboard.add('–•–û–î–û–í–ê–Ø –ß–ê–°–¢–¨', '–ú–û–¢–û–†–ù–ê–Ø –ß–ê–°–¢–¨')
    keyboard.add('–§–ò–õ–¨–¢–†–ê', '–û–°–¢–ê–õ–¨–ù–û–ï')
    keyboard.add('üõí–ö–æ—Ä–∑–∏–Ω–∞', 'üîô–ù–∞–∑–∞–¥')

    return keyboard


def vw_catalog():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add('–ê–ö–°–ï–°–°–£–ê–†–´ VW')
    keyboard.add('–ê–í–¢–û–•–ò–ú–ò–Ø VW', '–≠–õ–ï–ö–¢–†–ò–ö–ê VW')
    keyboard.add('–•–û–î–û–í–ê–Ø –ß–ê–°–¢–¨ VW', '–ú–û–¢–û–†–ù–ê–Ø –ß–ê–°–¢–¨ VW')
    keyboard.add('–§–ò–õ–¨–¢–†–ê VW', '–û–°–¢–ê–õ–¨–ù–û–ï VW')
    keyboard.add('üõí–ö–æ—Ä–∑–∏–Ω–∞', '‚óÄÔ∏è–ù–∞–∑–∞–¥')

    return keyboard


def search_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    back = KeyboardButton('üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    kb.add(back)

    return kb


def vw_accessories_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')
    all_products = database.vw_accessories_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_auto_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')
    all_products = database.auto_vw_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_motor_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')
    all_products = database.motor_vw_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_chemical_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')
    all_products = database.vw_chemical_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_filter_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')
    all_products = database.vw_filter_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_electrics_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button = KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = database.electrics_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def vw_other_kb():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    button = KeyboardButton('–ù–∞–∑–∞–¥ VW')

    all_products = database.vw_other_product()

    buttons = [KeyboardButton(i[0]) for i in all_products]
    kb.add(*buttons, button)

    return kb


def choose_product_count(plus_or_minus='', current_amount=1):

    kb = InlineKeyboardMarkup(row_width=3)


    back = InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', url='https://t.me/activebee_tashkent')
    plus = InlineKeyboardButton(text='+', callback_data='increment')
    minus = InlineKeyboardButton(text='-', callback_data='decrement')
    count = InlineKeyboardButton(text=str(current_amount),
                                 callback_data=str(current_amount))
    add_to_cart = InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É',
                                       callback_data='to_cart')

    if plus_or_minus == 'increment':
        new_amount = int(current_amount) + 1

        count = InlineKeyboardButton(text=str(new_amount),
                                     callback_data=str(new_amount))

    elif plus_or_minus == 'decrement':
        if int(current_amount) > 1:
            new_amount = int(current_amount) - 1

            count = InlineKeyboardButton(text=str(new_amount),
                                         callback_data=str(new_amount))


    kb.add(minus, count, plus)
    kb.row(add_to_cart)

    return kb


def send_admin_kb():
    kb = InlineKeyboardMarkup(row_width=3)
    send = InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É', url='https://t.me/activebee_tashkent')

    kb.add(send)
    return kb
